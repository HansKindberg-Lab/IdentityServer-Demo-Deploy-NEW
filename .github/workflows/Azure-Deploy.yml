name: "Azure-Deploy"

on:
  #push:
  #  branches: [ master ]
  workflow_dispatch:  

jobs:
  Azure-Deploy:
    name: "Azure-Deploy"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
      - name: "Set up dotnet"
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0"
      - name: "Build"
        run: dotnet build --configuration Release
        working-directory: "Source"
      - name: "Get AppSettings.json path"
        id: appSettingsJsonPath
        run: |
          $appSettingsJsonPath = (Get-ChildItem -Filter "AppSettings.json").FullName;
          echo "::set-output name=value::$($appSettingsJsonPath)";
        shell: pwsh
        working-directory: "Source"
      - name: "Convert AppSettings.json to Azure App Service settings"
        id: azureAppServiceSettings
        run: |
          Add-Type -AssemblyName "Project.dll";
          $appSettingsJsonPath = "${{ steps.appSettingsJsonPath.outputs.value }}";
          $azureAppServiceSettings = [Project.ConfigurationHelper]::ConvertToAzureAppServiceSettings($appSettingsJsonPath);
          echo "::set-output name=value::$($azureAppServiceSettings)"
        shell: pwsh
        working-directory: "Source/Project/bin/Release/net5.0"
      - name: "Azure sign-in"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Ensure resource-group"
        uses: azure/cli@v1
        with:
          inlineScript: |
            az group create --location ${{ secrets.AZURE_LOCATION }} --name ${{ secrets.AZURE_RESOURCEGROUP }}
      - name: "ARM deploy"
        uses: azure/arm-deploy@v1
        with:
          parameters: appServiceName=${{ secrets.AZURE_APPSERVICE }} appSettings=${{ steps.azureAppServiceSettings.outputs.value }} sithsRootCertificateBlob=${{ secrets.SITHS_ROOTCERTIFICATE }}
          resourceGroupName: ${{ secrets.AZURE_RESOURCEGROUP }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          template: "Source/Template.json"
      - name: "Set App Service settings"
        uses: azure/appservice-settings@v1
        with:
          app-name: "${{ secrets.AZURE_APPSERVICE }}"
          app-settings-json: "${{ steps.azureAppServiceSettings.outputs.value }}"
          mask-inputs: true
      - name: "Set MTLS App Service settings"
        uses: azure/appservice-settings@v1
        with:
          app-name: "${{ secrets.AZURE_APPSERVICE }}-mtls"
          app-settings-json: |
            [
              {
                "name": "DOCKER_ENABLE_CI",
                "value": "true",
                "slotSetting": false
              },
              {
                "name": "DOCKER_REGISTRY_SERVER_URL",
                "value": "https://index.docker.io",
                "slotSetting": false
              },
              {
                "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                "value": "false",
                "slotSetting": false
              },
              {
                "name": "Arne",
                "value": "Arne-value",
                "slotSetting": false
              }
            ]
          #app-settings-json: ${{ steps.azureAppServiceSettings.outputs.value }}
          mask-inputs: true